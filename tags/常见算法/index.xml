<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>常见算法 on 神秘极客</title><link>https://xbc.me/tags/%E5%B8%B8%E8%A7%81%E7%AE%97%E6%B3%95/</link><description>Recent content in 常见算法 on 神秘极客</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 13 Oct 2018 03:00:00 +0000</lastBuildDate><atom:link href="https://xbc.me/tags/%E5%B8%B8%E8%A7%81%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml"/><item><title>堆排序</title><link>https://xbc.me/learn-algorithm-heap-sort/</link><pubDate>Sat, 13 Oct 2018 03:00:00 +0000</pubDate><guid>https://xbc.me/learn-algorithm-heap-sort/</guid><description>具体实现 见GitHub版本库的堆排序。 算法实现 实现 该算法按照二叉树的原理。 完全二叉树：深度为k，有n个节点的二叉树，当且仅当其每一个节点都与</description></item><item><title>归并排序</title><link>https://xbc.me/learn-algorithm-merge-sort/</link><pubDate>Sat, 06 Oct 2018 03:00:00 +0000</pubDate><guid>https://xbc.me/learn-algorithm-merge-sort/</guid><description>具体实现 见GitHub版本库的归并排序。 算法实现 采用2层循环遍历，实现两个已排序的数组合并为一个排序数组。 第一层循环，从一个元素开始到最后一</description></item><item><title>选择排序</title><link>https://xbc.me/learn-algorithm-select-sort/</link><pubDate>Thu, 27 Sep 2018 03:00:00 +0000</pubDate><guid>https://xbc.me/learn-algorithm-select-sort/</guid><description>具体实现 见GitHub版本库的选择排序。 算法实现 采用2层循环遍历实现。 第一层循环，从一个元素开始到最后一个元素为止。 选择每次循环的第一个元素</description></item><item><title>快速排序</title><link>https://xbc.me/learn-algorithm-quick-sort/</link><pubDate>Thu, 20 Sep 2018 03:00:51 +0000</pubDate><guid>https://xbc.me/learn-algorithm-quick-sort/</guid><description>具体实现 见GitHub版本库的选择排序。 算法实现 采用2层循环遍历实现。 第一层循环，从一个元素开始到最后一个元素为止。 选择每次循环的第一个元素</description></item><item><title>冒泡排序</title><link>https://xbc.me/learn-algorithm-bubble-sort/</link><pubDate>Fri, 14 Sep 2018 03:00:54 +0000</pubDate><guid>https://xbc.me/learn-algorithm-bubble-sort/</guid><description>具体实现 见GitHub版本库的冒泡排序。 算法实现 根据需要排序的个数，进行倒序循环，起点为待排序个数，依次递减，直到1为止。 第二层循环，从第一</description></item><item><title>字符串反转</title><link>https://xbc.me/learn-algorithm-string-reverse/</link><pubDate>Fri, 07 Sep 2018 03:00:56 +0000</pubDate><guid>https://xbc.me/learn-algorithm-string-reverse/</guid><description>具体实现 见GitHub版本库的字符串反转。 PHP内置 只支持ASCII字符串 正则实现 /* 其中正则的两个修正符的说明如下： u (PCRE_UTF8) 此修正符启用了一个 PCRE</description></item><item><title>二分法查找-算法学习</title><link>https://xbc.me/learn-algorithm-binary-search/</link><pubDate>Tue, 28 Aug 2018 03:00:46 +0000</pubDate><guid>https://xbc.me/learn-algorithm-binary-search/</guid><description>二分搜索算法 在计算机科学中，二分搜索（英语：binary search），也称折半搜索（英语：half-interval search）[1]、</description></item><item><title>欧几里德算法及扩展</title><link>https://xbc.me/euclidean-algorithm-and-extensions/</link><pubDate>Thu, 17 Sep 2009 12:58:13 +0000</pubDate><guid>https://xbc.me/euclidean-algorithm-and-extensions/</guid><description>今天老师跟我们讲算法于程序设计了，嗯嗯，说到算法，就是有很多话说了。算法是计算机的基石、灵魂，李开复曾经写过一篇&amp;laquo;算法的力量&amp;raquo;。</description></item><item><title>有关C语言-辗转相除法</title><link>https://xbc.me/for-c-language-euclidean-algorithm/</link><pubDate>Mon, 05 May 2008 04:34:00 +0000</pubDate><guid>https://xbc.me/for-c-language-euclidean-algorithm/</guid><description>本文介绍如何了辗转相除法相关概念以及实现。</description></item></channel></rss>