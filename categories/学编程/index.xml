<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>学编程 on 神秘极客</title><link>https://xbc.me/categories/%E5%AD%A6%E7%BC%96%E7%A8%8B/</link><description>Recent content in 学编程 on 神秘极客</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 28 Mar 2020 11:00:00 +0000</lastBuildDate><atom:link href="https://xbc.me/categories/%E5%AD%A6%E7%BC%96%E7%A8%8B/index.xml" rel="self" type="application/rss+xml"/><item><title>搭建主从MySQL服务</title><link>https://xbc.me/build-master-slave-mysql-service/</link><pubDate>Sat, 28 Mar 2020 11:00:00 +0000</pubDate><guid>https://xbc.me/build-master-slave-mysql-service/</guid><description>前言 在MySQL复制这篇文章里，讲解了复制的应用场景：负载均衡、离线数据分析、远程数据分发等。 在搭建WordPress博客程序后，我在想，如</description></item><item><title>Git命令行开发指南</title><link>https://xbc.me/git-command-line-development-guide/</link><pubDate>Tue, 28 Jan 2020 11:00:00 +0000</pubDate><guid>https://xbc.me/git-command-line-development-guide/</guid><description>前言 做为长期使用Ubuntu的开发者，在命令行下开发已经变成一种习惯。我们在日常开发中使用Git来管理我们的源代码。仅以这篇文章记录常见的G</description></item><item><title>PHP的简化运算符</title><link>https://xbc.me/php-short-syntax-and-operator/</link><pubDate>Wed, 21 Aug 2019 15:51:47 +0000</pubDate><guid>https://xbc.me/php-short-syntax-and-operator/</guid><description>前言 最近在尝试做代码review，期间遇到了很多有趣的操作符。问题来了，写了这么多年的PHP语言，你对常见的简化运算符熟悉吗？我们一起来看看</description></item><item><title>研发环境那些事</title><link>https://xbc.me/rd-environment/</link><pubDate>Wed, 14 Aug 2019 15:45:28 +0000</pubDate><guid>https://xbc.me/rd-environment/</guid><description>前言 作为工程师，研发环境是日常研发工作必不可少的一个环节。什么是研发环境？我理解的研发环境，是除了生产环境(也有人叫线上环境，现网环境等)外</description></item><item><title>PHP自动加载</title><link>https://xbc.me/php-autoload/</link><pubDate>Tue, 06 Aug 2019 03:00:40 +0000</pubDate><guid>https://xbc.me/php-autoload/</guid><description>前言 在PHP里引用类，通常使用include，include_once，require，require_once这个几个函数引入PHP文件。</description></item><item><title>Swoole必知必会</title><link>https://xbc.me/swoole/</link><pubDate>Sat, 27 Jul 2019 18:22:12 +0000</pubDate><guid>https://xbc.me/swoole/</guid><description>前言 PHP这门语言从诞生到现在差不多20年了，一直是作为Web领域快速开发的首选语言。PHP是一个很简单的语言，日常场景是这样的，从数据库取</description></item><item><title>Etcd必知必会</title><link>https://xbc.me/etcd/</link><pubDate>Sat, 20 Jul 2019 18:05:57 +0000</pubDate><guid>https://xbc.me/etcd/</guid><description>前言 在前面的k8s的学习中，我们知道etcd存储了整个集群的状态信息，集群状态是非常重要的信息，在分布式环境下要能容忍失败，而且还不能挂。那</description></item><item><title>使用K8s的ConfigMap服务</title><link>https://xbc.me/k8s-configmap/</link><pubDate>Sun, 14 Jul 2019 09:08:40 +0000</pubDate><guid>https://xbc.me/k8s-configmap/</guid><description>前言 我在前两篇文章里，介绍如何搭建Dashboard以及K8s的架构和实现原理，这篇文章，我么尝试使用ConfigMap创建Redis服务。</description></item><item><title>搭建k8s的Dashboard服务</title><link>https://xbc.me/k8s-dashborad/</link><pubDate>Sun, 07 Jul 2019 08:33:26 +0000</pubDate><guid>https://xbc.me/k8s-dashborad/</guid><description>前言 这篇文章记录下自己搭建一个Kubernetes Dashboard的过程。 什么是Kubernetes Dashboard Kubernetes Dashboard是一套基于Web</description></item><item><title>K8s必知必会</title><link>https://xbc.me/k8s/</link><pubDate>Fri, 28 Jun 2019 08:25:09 +0000</pubDate><guid>https://xbc.me/k8s/</guid><description>前言 Kubernetes是用于自动部署，扩展和容器花应用程序的开源系统，简单的来讲就是容器集群调度平台，可以自动化应用容器的部署、扩展和操作</description></item><item><title>为什么你需要写单元测试？</title><link>https://xbc.me/test/</link><pubDate>Fri, 21 Jun 2019 08:00:48 +0000</pubDate><guid>https://xbc.me/test/</guid><description>前言 维基百科中对单元测试的定义是这样的： 在计算机编程中，单元测试（英语：Unit Testing）又称为模块测试，是针对程序模块（软件设计的最</description></item><item><title>Git工作流程实践</title><link>https://xbc.me/gitlab-flow-new/</link><pubDate>Fri, 14 Jun 2019 10:08:51 +0000</pubDate><guid>https://xbc.me/gitlab-flow-new/</guid><description>前言 上篇文章说到，选择Git作为版本控制系统，就是选择一种新的团队协作方式。Git常用的工作流程有几种：Git Flow、GitHub Flow</description></item><item><title>SVN迁移Git实践</title><link>https://xbc.me/svn2git/</link><pubDate>Thu, 06 Jun 2019 10:00:05 +0000</pubDate><guid>https://xbc.me/svn2git/</guid><description>前言 Git是我工作使用得最多的代码管理工具。从毕业到现在，一直在使用Git管理我的代码，使用Git的branch分支功能进行需求开发，尝试使</description></item><item><title>Ubuntu常用配置指南</title><link>https://xbc.me/ubuntu/</link><pubDate>Mon, 27 May 2019 09:00:48 +0000</pubDate><guid>https://xbc.me/ubuntu/</guid><description>前言 Ubuntu是我非常喜欢的一款开源操作系统。自从在大学学习安装Ubuntu 8.04后，从此一发不可收拾，喜欢上了这个有着朋友圈图标的Li</description></item><item><title>Redis必知必会</title><link>https://xbc.me/redis/</link><pubDate>Mon, 06 May 2019 03:07:32 +0000</pubDate><guid>https://xbc.me/redis/</guid><description>什么是Redis Redis是一个开源、基于内存的键值对存储数据库。通常情况下，键的类型都是字符串，值的类型有多种，Redis支持值的数据结构</description></item><item><title>Kafka实践</title><link>https://xbc.me/kafka-practice/</link><pubDate>Sat, 27 Apr 2019 03:11:32 +0000</pubDate><guid>https://xbc.me/kafka-practice/</guid><description>前言 在上一篇文章，我们介绍的Kafka的基本概念和原理。我们尝试搭建一个Kafka的集群，并尝试生产和消费消息。在消费消息时，需要注意PHP</description></item><item><title>MySQL实践</title><link>https://xbc.me/mysql-study/</link><pubDate>Sat, 20 Apr 2019 03:00:29 +0000</pubDate><guid>https://xbc.me/mysql-study/</guid><description>前言 在上一篇文章，我们整理总结MySQL的常用知识点和MySQL的复制相关概念，在这篇文章，我们尝试搭建一个MySQL的主从服务。 主从架构 我</description></item><item><title>MySQL复制</title><link>https://xbc.me/mysql-copy/</link><pubDate>Sat, 13 Apr 2019 03:10:36 +0000</pubDate><guid>https://xbc.me/mysql-copy/</guid><description>前言 在上一篇文章，我们整理总结MySQL的常用知识点，在这里，我们尝试学习MySQL复制的相关概念。 什么是MySQL的复制 MySQL的复制允</description></item><item><title>练习 Web 爬虫</title><link>https://xbc.me/exercise-web-crawler/</link><pubDate>Wed, 27 Mar 2019 03:51:23 +0000</pubDate><guid>https://xbc.me/exercise-web-crawler/</guid><description>问题 在这个练习中，我们将会使用 Go 的并发特性来并行化一个 Web 爬虫。 修改 Crawl 函数来并行地抓取 URL，并且保证不重复。 提示：你可以用一个 map 来缓存已经获</description></item><item><title>练习 等价二叉查找树</title><link>https://xbc.me/exercise-equivalent-binary-trees/</link><pubDate>Wed, 20 Mar 2019 03:47:12 +0000</pubDate><guid>https://xbc.me/exercise-equivalent-binary-trees/</guid><description>问题 不同二叉树的叶节点上可以保存相同的值序列。例如，以下两个二叉树都保存了序列 `1，1，2，3，5，8，13`。 在大多数语言中，检查两个二叉</description></item><item><title>练习 图像</title><link>https://xbc.me/exercise-images/</link><pubDate>Wed, 13 Mar 2019 03:45:21 +0000</pubDate><guid>https://xbc.me/exercise-images/</guid><description>问题 还记得之前编写的图片生成器吗？我们再来编写另外一个，不过这次它将会返回一个 image.Image 的实现而非一个数据切片。 定义你自己的 Image 类型，实现必要的方法并</description></item><item><title>练习 rot13Reader</title><link>https://xbc.me/exercise-rot-reader/</link><pubDate>Wed, 06 Mar 2019 03:43:22 +0000</pubDate><guid>https://xbc.me/exercise-rot-reader/</guid><description>问题 有种常见的模式是一个 io.Reader 包装另一个 io.Reader，然后通过某种方式修改其数据流。 例如，gzip.NewReader 函数接受一个 io.R</description></item><item><title>练习 Reader</title><link>https://xbc.me/exercise-reader/</link><pubDate>Thu, 28 Feb 2019 03:41:02 +0000</pubDate><guid>https://xbc.me/exercise-reader/</guid><description>问题 实现一个 Reader 类型，它产生一个 ASCII 字符 ‘A’ 的无限流。 背景知识 了解Go语言的接口实现方式。 Go读取流的方式 实现思路 定义MyReader结构体 为</description></item><item><title>练习 错误</title><link>https://xbc.me/exercise-errors/</link><pubDate>Thu, 21 Feb 2019 03:39:29 +0000</pubDate><guid>https://xbc.me/exercise-errors/</guid><description>问题 从之前的练习中复制 Sqrt 函数，修改它使其返回 error 值。 Sqrt 接受到一个负数时，应当返回一个非 nil 的错误值。复数同样也不被支持。 创建一个新的类型 type ErrNegativeSqrt float64 并</description></item><item><title>练习 Stringer</title><link>https://xbc.me/exercise-stringer/</link><pubDate>Thu, 14 Feb 2019 03:37:43 +0000</pubDate><guid>https://xbc.me/exercise-stringer/</guid><description>问题 通过让 IPAddr 类型实现 fmt.Stringer 来打印点号分隔的地址。 例如，IPAddr{1, 2, 3, 4} 应当打印为 “1.2.3.4”。 背景知识 类型的定义 实现类型的自定义函</description></item><item><title>练习 斐波纳契闭包</title><link>https://xbc.me/exercise-fibonacci-closure/</link><pubDate>Thu, 07 Feb 2019 03:35:28 +0000</pubDate><guid>https://xbc.me/exercise-fibonacci-closure/</guid><description>练习 斐波纳契闭包 问题 让我们用函数做些好玩的事情。 实现一个 fibonacci 函数，它返回一个函数（闭包），该闭包返回一个斐波纳契数列 `(0, 1, 1, 2, 3, 5, ...)`。 背</description></item><item><title>线程安全那些事</title><link>https://xbc.me/thread-safety/</link><pubDate>Sun, 03 Feb 2019 03:17:50 +0000</pubDate><guid>https://xbc.me/thread-safety/</guid><description>引言 在上一篇文章，我们了解了什么是进程/线程，把多进程和多线程进行了对比，那通常所说的线程安全是什么呢？要想搞清楚这个概念，那么我们可以尝试</description></item><item><title>进程那些事</title><link>https://xbc.me/process-those-things/</link><pubDate>Sat, 02 Feb 2019 15:00:26 +0000</pubDate><guid>https://xbc.me/process-those-things/</guid><description>什么是进程 在ARTS的微信群里，看到布置的命题作业，为了弄清楚一个概念，那所谓的进程到底是什么？ 作为程序员都知道，进程是一段程序代码，好像也</description></item><item><title>Kafka必知必会</title><link>https://xbc.me/kafka/</link><pubDate>Thu, 31 Jan 2019 15:57:44 +0000</pubDate><guid>https://xbc.me/kafka/</guid><description>什么是Kafka Kafka是一个分布式流处理平台。一个流平台有这三个关键功能： 发布和订阅记录流，类似一个消息队列或者企业消息系统。 能够以较强</description></item><item><title>RabbitMQ必知必会</title><link>https://xbc.me/rabbitmq/</link><pubDate>Wed, 30 Jan 2019 03:26:27 +0000</pubDate><guid>https://xbc.me/rabbitmq/</guid><description>什么是RabbitMQ RabbitMQ是一个消息队列(MQ=Message Queue)，它实现了高级消息队列协议(AMQP=Advanced</description></item><item><title>HAProxy必知必会</title><link>https://xbc.me/haproxy/</link><pubDate>Tue, 29 Jan 2019 03:00:13 +0000</pubDate><guid>https://xbc.me/haproxy/</guid><description>什么是HAProxy HAProxy是一款提供高可用性、负载均衡以及基于TCP和HTTP应用的高性能代理。典型的用于作为MySQL的负载均衡，</description></item><item><title>练习 映射</title><link>https://xbc.me/exercise-maps/</link><pubDate>Mon, 28 Jan 2019 03:30:26 +0000</pubDate><guid>https://xbc.me/exercise-maps/</guid><description>问题 实现 WordCount。它应当返回一个映射，其中包含字符串 s 中每个“单词”的个数。函数 wc.Test 会对此函数执行一系列测试用例，并输出成功还是失败</description></item><item><title>作为PHP程序员，我是这样学习Go语言的</title><link>https://xbc.me/php-vs-go/</link><pubDate>Fri, 25 Jan 2019 15:57:55 +0000</pubDate><guid>https://xbc.me/php-vs-go/</guid><description>为什么你应该学习Go语言呢？ 作为多年的PHP开发工程师，你是不是总认为自己在堆砌业务代码？ 一直以来，都是感觉无法提升自身的技术能力？ 想要有所</description></item><item><title>Tars实践</title><link>https://xbc.me/tars/</link><pubDate>Wed, 23 Jan 2019 08:56:58 +0000</pubDate><guid>https://xbc.me/tars/</guid><description>什么是Tars Tars这个名字取自于电影”星际穿越”中的机器人，它是基于名字服务使用Tars协议的高性能RPC开发框架，配套一体化的运营管理</description></item><item><title>练习 切片</title><link>https://xbc.me/exercise-slices/</link><pubDate>Mon, 21 Jan 2019 03:27:30 +0000</pubDate><guid>https://xbc.me/exercise-slices/</guid><description>练习 切片 问题 实现 Pic。它应当返回一个长度为 dy 的切片，其中每个元素是一个长度为 dx，元素类型为 uint8 的切片。当你运行此程序时，它会将每个整数解释</description></item><item><title>练习 循环与函数</title><link>https://xbc.me/exercise-loops-and-functions/</link><pubDate>Mon, 14 Jan 2019 03:25:36 +0000</pubDate><guid>https://xbc.me/exercise-loops-and-functions/</guid><description>练习 循环与函数 问题 为了练习函数与循环，我们来实现一个平方根函数：用牛顿法实现平方根函数。 计算机通常使用循环来计算 x 的平方根。从某个猜测的值 z</description></item><item><title>如何有效的践行ARTS</title><link>https://xbc.me/arts/</link><pubDate>Mon, 07 Jan 2019 17:22:24 +0000</pubDate><guid>https://xbc.me/arts/</guid><description>如何有效的践行ARTS 在阅读极客时间的专栏左耳听风时，发现这个专有名词。按照作者的说法，是为了得到相应的算法、代码、技术和影响力的训练。甚至</description></item><item><title>并发-学习Go语言</title><link>https://xbc.me/learn-go-goroutine/</link><pubDate>Mon, 07 Jan 2019 03:00:26 +0000</pubDate><guid>https://xbc.me/learn-go-goroutine/</guid><description>阅读笔记 goroutines.go package main import ( &amp;quot;fmt&amp;quot; &amp;quot;time&amp;quot; ) func say(s string) { for i := 0; i &amp;lt; 5; i++ { time.Sleep(100 * time.Millisecond) fmt.Println(s) } } func main() { go say(&amp;quot;world&amp;quot;) say(&amp;quot;hello&amp;quot;) } 笔记 Go 程（goroutine）是由 Go 运行时管理的轻量级线程。 go f(x,</description></item><item><title>接口-学习Go语言</title><link>https://xbc.me/learn-go-interface/</link><pubDate>Fri, 28 Dec 2018 03:00:50 +0000</pubDate><guid>https://xbc.me/learn-go-interface/</guid><description>阅读笔记 interfaces.go package main import ( &amp;quot;fmt&amp;quot; &amp;quot;math&amp;quot; ) type Abser interface { Abs() float64 } func main() { var a Abser f := MyFloat(-math.Sqrt2) v := Vertex{3, 4} a = f // a MyFloat 实现了 Abser a = &amp;amp;v // a *Vertex 实现了 Abser // 下面一行，v 是一个 Vertex（而</description></item><item><title>方法-学习Go语言</title><link>https://xbc.me/learn-go-method/</link><pubDate>Fri, 21 Dec 2018 03:00:30 +0000</pubDate><guid>https://xbc.me/learn-go-method/</guid><description>阅读笔记 methods.go package main import ( &amp;quot;fmt&amp;quot; &amp;quot;math&amp;quot; ) type Vertex struct { X, Y float64 } func (v Vertex) Abs() float64 { return math.Sqrt(v.X*v.X + v.Y*v.Y) } func main() { v := Vertex{3, 4} fmt.Println(v.Abs()) } 笔记 Go 没有类。不过你可以为结构体类型定义方法。 方法就是一类带</description></item><item><title>映射-学习Go语言</title><link>https://xbc.me/learn-go-mapping/</link><pubDate>Fri, 14 Dec 2018 03:04:50 +0000</pubDate><guid>https://xbc.me/learn-go-mapping/</guid><description>阅读笔记 maps.go package main import &amp;quot;fmt&amp;quot; type Vertex struct { Lat, Long float64 } var m map[string]Vertex func main() { m = make(map[string]Vertex) m[&amp;quot;Bell Labs&amp;quot;] = Vertex{ 40.68433, -74.39967, } fmt.Println(m[&amp;quot;Bell Labs&amp;quot;]) } 笔记 make 函数会返回给定类型的映射，并将其初始化备用。 m就是映射了，将k</description></item><item><title>切片-学习Go语言</title><link>https://xbc.me/learn-go-slice/</link><pubDate>Fri, 07 Dec 2018 03:52:53 +0000</pubDate><guid>https://xbc.me/learn-go-slice/</guid><description>阅读笔记 slices.go package main import &amp;quot;fmt&amp;quot; func main() { primes := [6]int{2, 3, 5, 7, 11, 13} var s []int = primes[1:4] fmt.Println(s) } 笔记 切片的内部实现，类似一个链表+头尾指针。 数组的切片范围为low&amp;lt;= x &amp;lt; high slices-pointers.go package</description></item><item><title>结构体-学习Go语言</title><link>https://xbc.me/learn-go-structrue/</link><pubDate>Tue, 27 Nov 2018 03:39:35 +0000</pubDate><guid>https://xbc.me/learn-go-structrue/</guid><description>阅读笔记 pointers.go package main import &amp;quot;fmt&amp;quot; func main() { i, j := 42, 2701 p := &amp;amp;i // point to i fmt.Println(*p) // read i through the pointer *p = 21 // set i through the pointer fmt.Println(i) // see the new value of i p = &amp;amp;j // point to j *p = *p / 37 // divide j through the pointer fmt.Println(j) // see the</description></item><item><title>控制流程-学习Go语言</title><link>https://xbc.me/learn-go-flow/</link><pubDate>Tue, 20 Nov 2018 03:27:17 +0000</pubDate><guid>https://xbc.me/learn-go-flow/</guid><description>阅读笔记 if-with-a-short-statement.go package main import ( &amp;quot;fmt&amp;quot; &amp;quot;math&amp;quot; ) func pow(x, n, lim float64) float64 { if v := math.Pow(x, n); v &amp;lt; lim { return v } return lim } func main() { fmt.Println( pow(3, 2, 10), pow(3, 3, 20), ) } 笔记 同 for 一样， if 语句可以在条件表达式前执行一个简</description></item><item><title>函数值-学习Go语言</title><link>https://xbc.me/learn-go-function/</link><pubDate>Tue, 13 Nov 2018 03:16:15 +0000</pubDate><guid>https://xbc.me/learn-go-function/</guid><description>阅读笔记 functions-values.go package main import ( &amp;quot;fmt&amp;quot; &amp;quot;math&amp;quot; ) func compute(fn func(float64, float64) float64) float64 { return fn(3, 4) } func main() { hypot := func(x, y float64) float64 { return math.Sqrt(x*x + y*y) } fmt.Println(hypot(5, 12)) fmt.Println(compute(hypot)) fmt.Println(compute(math.Pow)) } 笔记 函数也是值。它们可以像其它值一样传递。 函数值可以用</description></item><item><title>消息队列的思考</title><link>https://xbc.me/message-system/</link><pubDate>Tue, 06 Nov 2018 03:00:27 +0000</pubDate><guid>https://xbc.me/message-system/</guid><description>什么是消息队列 维基百科的定义：在计算机科学中，消息队列（英语：Message queue）是一种进程间通信或同一进程的不同线程间的通信方式，软</description></item><item><title>MaxWell的学习</title><link>https://xbc.me/learn-maxwell/</link><pubDate>Sat, 27 Oct 2018 03:00:32 +0000</pubDate><guid>https://xbc.me/learn-maxwell/</guid><description>什么是MaxWell？ MaxWell守护进程是读取MySQL的二进制日志，将更新操作写入到消息队列，例如Kafka，RabbitMQ，Red</description></item><item><title>配置系统的思考</title><link>https://xbc.me/config-system/</link><pubDate>Sat, 20 Oct 2018 03:00:00 +0000</pubDate><guid>https://xbc.me/config-system/</guid><description>配置系统在整个软件的生命周期里，有着很重要的角色。例如： 在新公司上班，第一天需要配置开发环境。。。 多环境部署，开发、测试、预发布、生产不同环</description></item><item><title>堆排序</title><link>https://xbc.me/learn-algorithm-heap-sort/</link><pubDate>Sat, 13 Oct 2018 03:00:00 +0000</pubDate><guid>https://xbc.me/learn-algorithm-heap-sort/</guid><description>具体实现 见GitHub版本库的堆排序。 算法实现 实现 该算法按照二叉树的原理。 完全二叉树：深度为k，有n个节点的二叉树，当且仅当其每一个节点都与</description></item><item><title>归并排序</title><link>https://xbc.me/learn-algorithm-merge-sort/</link><pubDate>Sat, 06 Oct 2018 03:00:00 +0000</pubDate><guid>https://xbc.me/learn-algorithm-merge-sort/</guid><description>具体实现 见GitHub版本库的归并排序。 算法实现 采用2层循环遍历，实现两个已排序的数组合并为一个排序数组。 第一层循环，从一个元素开始到最后一</description></item><item><title>选择排序</title><link>https://xbc.me/learn-algorithm-select-sort/</link><pubDate>Thu, 27 Sep 2018 03:00:00 +0000</pubDate><guid>https://xbc.me/learn-algorithm-select-sort/</guid><description>具体实现 见GitHub版本库的选择排序。 算法实现 采用2层循环遍历实现。 第一层循环，从一个元素开始到最后一个元素为止。 选择每次循环的第一个元素</description></item><item><title>快速排序</title><link>https://xbc.me/learn-algorithm-quick-sort/</link><pubDate>Thu, 20 Sep 2018 03:00:51 +0000</pubDate><guid>https://xbc.me/learn-algorithm-quick-sort/</guid><description>具体实现 见GitHub版本库的选择排序。 算法实现 采用2层循环遍历实现。 第一层循环，从一个元素开始到最后一个元素为止。 选择每次循环的第一个元素</description></item><item><title>冒泡排序</title><link>https://xbc.me/learn-algorithm-bubble-sort/</link><pubDate>Fri, 14 Sep 2018 03:00:54 +0000</pubDate><guid>https://xbc.me/learn-algorithm-bubble-sort/</guid><description>具体实现 见GitHub版本库的冒泡排序。 算法实现 根据需要排序的个数，进行倒序循环，起点为待排序个数，依次递减，直到1为止。 第二层循环，从第一</description></item><item><title>字符串反转</title><link>https://xbc.me/learn-algorithm-string-reverse/</link><pubDate>Fri, 07 Sep 2018 03:00:56 +0000</pubDate><guid>https://xbc.me/learn-algorithm-string-reverse/</guid><description>具体实现 见GitHub版本库的字符串反转。 PHP内置 只支持ASCII字符串 正则实现 /* 其中正则的两个修正符的说明如下： u (PCRE_UTF8) 此修正符启用了一个 PCRE</description></item><item><title>二分法查找-算法学习</title><link>https://xbc.me/learn-algorithm-binary-search/</link><pubDate>Tue, 28 Aug 2018 03:00:46 +0000</pubDate><guid>https://xbc.me/learn-algorithm-binary-search/</guid><description>二分搜索算法 在计算机科学中，二分搜索（英语：binary search），也称折半搜索（英语：half-interval search）[1]、</description></item><item><title>搭建Docker开发环境-学习Go语言</title><link>https://xbc.me/leanr-go-docker/</link><pubDate>Tue, 21 Aug 2018 03:00:28 +0000</pubDate><guid>https://xbc.me/leanr-go-docker/</guid><description>前言 学习Go语言之前，尝试搭建基于Docker的开发环境。 基础环境 根据之前的经验，实现一个Docker的虚拟机环境。 可以在Ubuntu 18.</description></item><item><title>Gin和grpc搭建-学习Go语言</title><link>https://xbc.me/learn-go-gin/</link><pubDate>Tue, 14 Aug 2018 03:00:54 +0000</pubDate><guid>https://xbc.me/learn-go-gin/</guid><description>安装grpc 如果你遇到这样的错误 package google.golang.org/grpc: unrecognized import path &amp;quot;google.golang.org/grpc&amp;quot;(https fetch: Get https://google.golang.org/grpc?go-get=1: dial tcp 216.239.37.1:443: i/o timeout) 解决方案，采用最新github的地址。 git clone https://github.com/grpc/grpc-go.git $GOPATH/src/google.golang.org/grpc git clone https://github.com/golang/net.git $GOPATH/src/golang.org/x/net git clone https://github.com/golang/text.git $GOPATH/src/golang.org/x/text go get -u github.com/golang/protobuf/{proto,protoc-gen-go} git clone https://github.com/google/go-genproto.git $GOPATH/src/google.golang.org/genproto cd</description></item><item><title>单元测试-学习Go语言</title><link>https://xbc.me/learn-go-unitest/</link><pubDate>Tue, 07 Aug 2018 03:00:07 +0000</pubDate><guid>https://xbc.me/learn-go-unitest/</guid><description>实现 采用自身的testing包实现。 踩坑 单元测试和源文件必要放在同一个目录下，才可以正常执行。 Go PHPUnit *_test文件和源文件一起 必须 任意 断言 第</description></item><item><title>基础-学习Go语言</title><link>https://xbc.me/learn-go-basic/</link><pubDate>Sat, 28 Jul 2018 03:00:37 +0000</pubDate><guid>https://xbc.me/learn-go-basic/</guid><description>包 每个 Go 程序都是由包构成的。 程序从 main 包开始运行。 本程序通过导入路径 “fmt” 和 “math/rand” 来使用这两个包。 按照约定，包名与导入路径</description></item><item><title>nginx出现504 Gateway Time-out的解决思路</title><link>https://xbc.me/nginx-fix-504-gateway-timeout/</link><pubDate>Mon, 13 Aug 2012 04:00:29 +0000</pubDate><guid>https://xbc.me/nginx-fix-504-gateway-timeout/</guid><description>在安装完Nginx+PHP-fpm+Mysql后 （如何安装LNMP环境，请参考快速配置LNMP环境Nginx0.8.54+MYSQL5.5.</description></item><item><title>Magento创建configurable产品的要点</title><link>https://xbc.me/magento-create-configurable-product/</link><pubDate>Thu, 26 Jul 2012 10:00:00 +0000</pubDate><guid>https://xbc.me/magento-create-configurable-product/</guid><description>接着上一篇用API创建可配置的产品Configurable Product说事。Magento的产品类型可分为Simple Product、Gr</description></item><item><title>创建Shipping Module</title><link>https://xbc.me/magento-create-shiping-module/</link><pubDate>Mon, 16 Jul 2012 10:00:00 +0000</pubDate><guid>https://xbc.me/magento-create-shiping-module/</guid><description>Magento系统自带了大概7种运费方式：平价、运费表、免运费、ups、usps、fedex、dhl等。不过这些依然无法满足我们的需求，这时</description></item><item><title>自定义Magento导航目录</title><link>https://xbc.me/magento-custom-category-navigation-menu/</link><pubDate>Sat, 14 Jul 2012 10:00:00 +0000</pubDate><guid>https://xbc.me/magento-custom-category-navigation-menu/</guid><description>Magento的默认主题中导航目录是垂直下拉式菜单:鼠标滑过时会显示下级菜单。实际上你如果要把菜单改成水平下拉式的话，最好的方式重写目录导航</description></item><item><title>Magento的Module layout update</title><link>https://xbc.me/magento-add-module-frontend-layout/</link><pubDate>Tue, 26 Jun 2012 10:30:00 +0000</pubDate><guid>https://xbc.me/magento-add-module-frontend-layout/</guid><description>在Magento中xml是模块配置的利器，有时开发一个Magento的模块时，需要添加模块的layout update。 添加前台的layout</description></item><item><title>Magento 数据导入sku自动增长</title><link>https://xbc.me/magento-import-data-make-sku-auto-increment/</link><pubDate>Thu, 31 May 2012 10:00:00 +0000</pubDate><guid>https://xbc.me/magento-import-data-make-sku-auto-increment/</guid><description>近来由于业务需要研究了下Magento的数据导入模块，只能说很好很强大。起初的目的是为了业务组的一些BT要求(此处对业务组500字的谴责…)</description></item><item><title>Yii实现Password Repeat Validate Rule</title><link>https://xbc.me/yii-custom-password-repeat-rule/</link><pubDate>Wed, 30 May 2012 10:00:00 +0000</pubDate><guid>https://xbc.me/yii-custom-password-repeat-rule/</guid><description>在使用Yii时遇到这样的需求：在一个注册的页面输入两次密码，并验证两次输入是否一致。可是password的repeat的字段在数据库并不存在</description></item><item><title>安装Redmine 2.0</title><link>https://xbc.me/install-redmine-2-0/</link><pubDate>Wed, 16 May 2012 09:00:00 +0000</pubDate><guid>https://xbc.me/install-redmine-2-0/</guid><description>Redmine 这厮就这样大张旗鼓的升级到了2.0。正好公司的mantisbt实在是不给力，就准备安装Redmine。很之前安装的方法并没有什么区别，可以</description></item><item><title>添加Apache模块</title><link>https://xbc.me/apache-add-module/</link><pubDate>Sat, 12 May 2012 10:00:00 +0000</pubDate><guid>https://xbc.me/apache-add-module/</guid><description>和php添加模块类似，Apache也有动态添加模块的工具apxs。 找到下载的模块目录 cd /usr/local/apache/modules/filters // 编译并安装 apxs -ica mod_deflate.c //会出现编译问题，换成绝对路径编</description></item><item><title>动态添加php extension</title><link>https://xbc.me/add-php-extension/</link><pubDate>Sat, 12 May 2012 09:30:00 +0000</pubDate><guid>https://xbc.me/add-php-extension/</guid><description>通常情况下，在手动编译下都会添加一些常用的php模块，例如mbstring、curl等。那如果手动编译后，发现有些应用又需要添加新的php模</description></item><item><title>Magento Sales Grid Filter bug</title><link>https://xbc.me/magento-sales-grid-filter-bugs/</link><pubDate>Fri, 11 May 2012 10:00:00 +0000</pubDate><guid>https://xbc.me/magento-sales-grid-filter-bugs/</guid><description>当你使用Sales Order的filter时有时会莫名其妙的出现就会出现下面Magento经典的报错页面。在var/report/找到这个报</description></item><item><title>Magento 设置Grid per page size</title><link>https://xbc.me/magento-set-grid-per-page-size/</link><pubDate>Thu, 10 May 2012 09:00:00 +0000</pubDate><guid>https://xbc.me/magento-set-grid-per-page-size/</guid><description>Magento后台的Grid pagesize默认最大值为200，已经远远不能满足用户们的需要了。在后台实在是找不到可以设置pagesize 的</description></item><item><title>创建可配置的产品Configurable Product</title><link>https://xbc.me/magento-create-configurable-product-by-code/</link><pubDate>Sat, 14 Apr 2012 09:00:00 +0000</pubDate><guid>https://xbc.me/magento-create-configurable-product-by-code/</guid><description>接着上篇文章写点技术性文章，再次充实下Magento让人汗颜的开发文档。这次我要创建的是Configurable Product。创建该类型的</description></item><item><title>创建Attribute 和 Attribute Set</title><link>https://xbc.me/magento-create-attribute-set-and-attribute-by-code/</link><pubDate>Sun, 08 Apr 2012 09:00:00 +0000</pubDate><guid>https://xbc.me/magento-create-attribute-set-and-attribute-by-code/</guid><description>自从上次总结后，俺是忙得团团转，忙着找工作，忙着打代码，忙着忙着，一晃一个月就过去了。清明放假除了祭奠亲人外，顺便总结下最近的成果。最近一直</description></item><item><title>利用vsftpd搭建ftp服务器</title><link>https://xbc.me/configure-vsftpd-server/</link><pubDate>Fri, 02 Mar 2012 01:00:24 +0000</pubDate><guid>https://xbc.me/configure-vsftpd-server/</guid><description>起因是帮朋友弄一个网站，服务器是最小化安装，并没有安装任何其他的cpanel软件，要实现的需求是建立一个用户chroot到一个特殊的目录。 安</description></item><item><title>CentOS 6 安装Redmine</title><link>https://xbc.me/centos-install-redmine/</link><pubDate>Sat, 25 Feb 2012 09:00:00 +0000</pubDate><guid>https://xbc.me/centos-install-redmine/</guid><description>Redmine是一个灵活的项目管理web应用，采用Ruby on Rails框架开发。Redmine是典型的web 2.0网站，项目管理系统的后起之</description></item><item><title>Magento 多站点多域名安装教程</title><link>https://xbc.me/magento-the-tutorial-of-the-multi-domain-multi-site/</link><pubDate>Sat, 18 Feb 2012 09:00:00 +0000</pubDate><guid>https://xbc.me/magento-the-tutorial-of-the-multi-domain-multi-site/</guid><description>在电子商务越来越火的今天，在线建立自己的商店已经不是一件很困难的事了，Open Source的网店软件比比皆是，现在最流行Prestashop</description></item><item><title>过滤Magento地址的P.O Box</title><link>https://xbc.me/no-po-box-shipping/</link><pubDate>Wed, 04 Jan 2012 12:00:00 +0000</pubDate><guid>https://xbc.me/no-po-box-shipping/</guid><description>原因很简单，我们使用的快递是UPS，UPS是不送P.O.Boxes地址的。这就需要在支付填写地址时进行验证。 在自己动手之前，我找了一个解决方</description></item><item><title>Xampp安装PHPUnit</title><link>https://xbc.me/install-phpunit-on-xampp/</link><pubDate>Sat, 19 Nov 2011 10:00:00 +0000</pubDate><guid>https://xbc.me/install-phpunit-on-xampp/</guid><description>最近准备着手开发Magento的插件，为了保证插件的代码质量，决定采用TDD的方法进行开发。在PHP实战中看到的TDD的开发方法，突然觉得豁然开朗，开发起来一点都不费力气，现在终于有机会亲自实现了。</description></item><item><title>快速配置LNMP环境Nginx0.8.54+MYSQL5.5.16+PHP5.3.8+CentOS 6</title><link>https://xbc.me/quickly-configure-lnmp-environment-nginx0-8-54-mysql5-5-16-php5-3-8-centos-6/</link><pubDate>Sat, 05 Nov 2011 09:30:00 +0000</pubDate><guid>https://xbc.me/quickly-configure-lnmp-environment-nginx0-8-54-mysql5-5-16-php5-3-8-centos-6/</guid><description>最近购买了Linode的VPS服务，就开始着手以Nginx 为基础搭建LNMP平台，体验Nginx的魅力。Linux OS选择的是Linode的CentOS 6，话说CentOS 6出来太慢了。。。</description></item><item><title>迁移SVN 到Git Server</title><link>https://xbc.me/svn-to-git-server/</link><pubDate>Sat, 15 Oct 2011 08:25:00 +0000</pubDate><guid>https://xbc.me/svn-to-git-server/</guid><description>由于先前是用SVN做代码的版本管理，现在需要尝试将SVN转到Git来，由于Git自身附带了高质量的转换工具，剩下我们就需要做好迁移的配置。Git自带的桥接命令git svn 可以与svn交互，这样并不完美，不如一次性把它做好，特此记录下迁移的过程。</description></item><item><title>Redmine升级</title><link>https://xbc.me/redmine-upgrade/</link><pubDate>Mon, 04 Jul 2011 12:00:00 +0000</pubDate><guid>https://xbc.me/redmine-upgrade/</guid><description>上篇文章介绍如何安装Redmine，运行一段时间，发现Redmine都已经发布1.2版本，跟chrome有得一拼了。好了，本文记录将redmine从1.0.4升级到1.1.3的过程。按照官方的最新文档升级RedmineUpgrade，稍有修改。</description></item><item><title>Nginx 平滑升级</title><link>https://xbc.me/nginx-upgrade/</link><pubDate>Sat, 25 Jun 2011 12:00:00 +0000</pubDate><guid>https://xbc.me/nginx-upgrade/</guid><description>Nginx(&amp;ldquo;engine x&amp;rdquo;) 是一个高性能的 HTTP 和 反向代理 服务器，也是一个 IMAP/POP3/SMTP 代理服务器 。 Nginx 是由 Igor Sysoev 为俄罗斯访问量第二的Rambler.ru 站点开发的，它已经在该站点运行超过四年多了。Igor 将源代码以类BSD许可证的形式发布。自Nginx 发布四年来，Nginx 已经因为它的稳定性、丰富的功能集、 示例配置文件和低系统资源的消耗而闻名了。</description></item><item><title>Red Hat 安装配置Yum</title><link>https://xbc.me/install-yum-on-red-hat/</link><pubDate>Sat, 18 Jun 2011 12:00:00 +0000</pubDate><guid>https://xbc.me/install-yum-on-red-hat/</guid><description>在公司接手一台服务器，准备做点想做的事，发现竟然连vim都没有，没事，我自己装，悲剧的发现连Yum都没装&amp;hellip;</description></item><item><title>在win7下 安装多个版本的ie</title><link>https://xbc.me/testing-multiple-versions-of-ie-in-win7/</link><pubDate>Sat, 11 Jun 2011 00:00:00 +0000</pubDate><guid>https://xbc.me/testing-multiple-versions-of-ie-in-win7/</guid><description>之前有写过一篇文章是关于win7下用IE6进行调试，现在的问题是我不仅仅想安装ie6就完事了，还想要ie7,ie8呢？下面介绍一种方法在win7下利用windows xp mode 来模拟不同版本的IE。</description></item><item><title>Git 常用命令整理</title><link>https://xbc.me/git-commands/</link><pubDate>Sun, 15 May 2011 12:00:00 +0000</pubDate><guid>https://xbc.me/git-commands/</guid><description>最近在公司的服务器上安装了Git Server，开始从SVN转向到Git了，整理了一些在Git常用的命令。</description></item><item><title>在windows安装配置Git开发环境</title><link>https://xbc.me/install-git-on-windows/</link><pubDate>Sun, 08 May 2011 11:00:00 +0000</pubDate><guid>https://xbc.me/install-git-on-windows/</guid><description>记录Git的安装过程，实际起来很简单。</description></item><item><title>在Ubuntu 上配置Git Server</title><link>https://xbc.me/install-git-on-ubuntu/</link><pubDate>Mon, 02 May 2011 02:00:00 +0000</pubDate><guid>https://xbc.me/install-git-on-ubuntu/</guid><description>记录Git的安装过程，实际起来很简单。</description></item><item><title>常用的jQuery插件</title><link>https://xbc.me/commonly-used-jquery-plugin/</link><pubDate>Mon, 07 Feb 2011 01:00:29 +0000</pubDate><guid>https://xbc.me/commonly-used-jquery-plugin/</guid><description>工作中主要接触的是jQuery这个轻量级优秀javascript库，喜欢它优美的query语法，丰富的插件，下面在工作中常用到的一些jQuery插件。</description></item><item><title>Win7下用原生的ie6调试网页</title><link>https://xbc.me/use-ie6-in-win7/</link><pubDate>Sat, 22 Jan 2011 03:00:25 +0000</pubDate><guid>https://xbc.me/use-ie6-in-win7/</guid><description>作为前端开发的同学们，在ie6上调试是家常菜了，Windows XP一般都会自带ie6,那如何要win7下使用ie6咧？</description></item><item><title>Y460在Windows 7下安装CentOS-5.5</title><link>https://xbc.me/installing-centos-in-lenovo-y460/</link><pubDate>Fri, 07 Jan 2011 01:00:16 +0000</pubDate><guid>https://xbc.me/installing-centos-in-lenovo-y460/</guid><description>最近看了 鸟哥的Linux私房菜，这本书很适合新手学习，元旦放假没事，就学习一下CentOS系统的安装。安装环境是Windows 7 旗舰版+Y460,具体的笔记本配置请看这里。</description></item><item><title>wordpress 3.0 中使用session</title><link>https://xbc.me/enabling-sessions-in-wordpress/</link><pubDate>Mon, 15 Nov 2010 06:14:01 +0000</pubDate><guid>https://xbc.me/enabling-sessions-in-wordpress/</guid><description>本文介绍了在Wordpress中需要手动启用全局的Session的方法。</description></item><item><title>学习vim</title><link>https://xbc.me/learning-vim/</link><pubDate>Thu, 11 Nov 2010 15:10:30 +0000</pubDate><guid>https://xbc.me/learning-vim/</guid><description>因为在工作中不可避免用用到linux主机，要操作终端，但是我对vi编辑器一筹莫展，总是看黑糊糊的框框感到很无奈，功力不够啊，想在终端操作文本，还是有困难，觉得需要认真学习下vi编辑器的操作。</description></item><item><title>php的AOP编程实例</title><link>https://xbc.me/php-programming-examples-of-aop/</link><pubDate>Sun, 07 Nov 2010 11:29:09 +0000</pubDate><guid>https://xbc.me/php-programming-examples-of-aop/</guid><description>最近研究下php下面的AOP实现，在网上也看到不少的文章，老王在他的手册里利用魔术方法实现准AOP 这个方法很好。</description></item><item><title>X1 主题发布</title><link>https://xbc.me/x1-theme-released/</link><pubDate>Tue, 26 Oct 2010 11:16:39 +0000</pubDate><guid>https://xbc.me/x1-theme-released/</guid><description>本文介绍了修改后的X1的WordPress主题。</description></item><item><title>显示不同类型的链接</title><link>https://xbc.me/show-different-links/</link><pubDate>Sun, 17 Oct 2010 14:33:22 +0000</pubDate><guid>https://xbc.me/show-different-links/</guid><description>在ck的博客看到不一样的外链样式，突然想起先前看的书精通CSS-高级Web标准解决方案中利用css显示不同样式的章节，在ilmilk同学这还能看到全文+demo效果。</description></item><item><title>javascript插入视频类</title><link>https://xbc.me/javascript-insert-video-class/</link><pubDate>Thu, 14 Oct 2010 09:49:04 +0000</pubDate><guid>https://xbc.me/javascript-insert-video-class/</guid><description>在上一篇中是利用jQuery来实现插入视频，那为什么不用js原生来写呢，这样就不加载jQuery的库了。顺便学习了javascript的面向对象实现类。</description></item><item><title>视频短代码</title><link>https://xbc.me/video-short-code/</link><pubDate>Tue, 12 Oct 2010 06:54:40 +0000</pubDate><guid>https://xbc.me/video-short-code/</guid><description>本文介绍了如何实现WordPress的视频插件。</description></item><item><title>jQuery 省市联动的效果</title><link>https://xbc.me/jquery-provinces-and-the-effect-of-linkage/</link><pubDate>Sun, 20 Jun 2010 17:18:48 +0000</pubDate><guid>https://xbc.me/jquery-provinces-and-the-effect-of-linkage/</guid><description>本文介绍了JS实现省份三级联动。</description></item><item><title>jQuery 三种的习惯用法</title><link>https://xbc.me/jquery-three-idioms/</link><pubDate>Mon, 14 Jun 2010 02:06:25 +0000</pubDate><guid>https://xbc.me/jquery-three-idioms/</guid><description>jquery的三种习惯用法，先总结一下，参考书籍jQuery 实战。</description></item><item><title>ajax load的效果</title><link>https://xbc.me/ajax-load-effect/</link><pubDate>Wed, 02 Jun 2010 02:52:33 +0000</pubDate><guid>https://xbc.me/ajax-load-effect/</guid><description>本文实现了简单的loading效果。</description></item><item><title>让jquery也和swfonject一样插入视频</title><link>https://xbc.me/jquery-insert-a-video-like-swfonject/</link><pubDate>Tue, 01 Jun 2010 09:39:16 +0000</pubDate><guid>https://xbc.me/jquery-insert-a-video-like-swfonject/</guid><description>本文介绍利用jquery插入视频的方法。</description></item><item><title>遇到了传说的ie 6 img 3px的bug</title><link>https://xbc.me/legend-encountered-the-bug-ie-6-img-3px/</link><pubDate>Sat, 03 Apr 2010 02:56:05 +0000</pubDate><guid>https://xbc.me/legend-encountered-the-bug-ie-6-img-3px/</guid><description>记录自己遇到的ie6浏览器bug。</description></item><item><title>php开发环境搭建</title><link>https://xbc.me/php-development-environment-to-build/</link><pubDate>Sun, 07 Mar 2010 11:32:24 +0000</pubDate><guid>https://xbc.me/php-development-environment-to-build/</guid><description>本文介绍如何搭建PHP开发环境。</description></item><item><title>DNN建立独立模块开发项目 编译后丢失引用</title><link>https://xbc.me/dnn-module-development-project-lost-references/</link><pubDate>Tue, 26 Jan 2010 10:14:18 +0000</pubDate><guid>https://xbc.me/dnn-module-development-project-lost-references/</guid><description>在DNN开发中遇到的引用丢失问题，本文尝试解决这个问题。</description></item><item><title>DNN模块开发</title><link>https://xbc.me/dnn-module-development/</link><pubDate>Wed, 20 Jan 2010 10:26:25 +0000</pubDate><guid>https://xbc.me/dnn-module-development/</guid><description>DNN学习笔记。</description></item><item><title>云时代的在线编辑器</title><link>https://xbc.me/clound-online-editor/</link><pubDate>Mon, 11 Jan 2010 23:01:31 +0000</pubDate><guid>https://xbc.me/clound-online-editor/</guid><description>云在线编辑器简介</description></item><item><title>C# 语言规范学习笔记（一）</title><link>https://xbc.me/c-sharp-language-specification-study-notes-1/</link><pubDate>Wed, 06 Jan 2010 01:54:00 +0000</pubDate><guid>https://xbc.me/c-sharp-language-specification-study-notes-1/</guid><description>c#语言规范学习笔记</description></item><item><title>强类型 弱类型 显式类型 隐式类型</title><link>https://xbc.me/strong-typing-weakly-typed-explicit-type-implicit-type/</link><pubDate>Sat, 02 Jan 2010 13:37:25 +0000</pubDate><guid>https://xbc.me/strong-typing-weakly-typed-explicit-type-implicit-type/</guid><description>转载文章，介绍显式类型和隐式类型的概念以及实现。</description></item><item><title>OOP深入</title><link>https://xbc.me/oop-in-depth/</link><pubDate>Sat, 19 Sep 2009 11:50:09 +0000</pubDate><guid>https://xbc.me/oop-in-depth/</guid><description>以前只是在课堂学习过面向对象的技术，而在实际的编程时基本没有实践过的，呵呵，现在只好拣起来了。</description></item><item><title>Java 大作业之学生信息管理系统-The End</title><link>https://xbc.me/java-great-job-of-student-information-management-system-the-end/</link><pubDate>Wed, 10 Jun 2009 09:44:44 +0000</pubDate><guid>https://xbc.me/java-great-job-of-student-information-management-system-the-end/</guid><description>经过一个星期的奋战终于完成可恶的java大作业 期间，基本前三天是按时睡觉 后三天是基本不睡觉，在电脑前面坐了几天，终于修成正果：完成设计报告跟源代码。</description></item><item><title>Java 大作业之学生信息管理系统—The Six</title><link>https://xbc.me/java-great-job-of-student-information-management-system-the-six/</link><pubDate>Wed, 10 Jun 2009 00:23:57 +0000</pubDate><guid>https://xbc.me/java-great-job-of-student-information-management-system-the-six/</guid><description>点击添加按钮即可进行添加 主要由addframe.java实现。</description></item><item><title>Java 大作业之学生信息管理系统—The Five</title><link>https://xbc.me/java-great-job-of-student-information-management-system-the-five/</link><pubDate>Tue, 09 Jun 2009 03:16:39 +0000</pubDate><guid>https://xbc.me/java-great-job-of-student-information-management-system-the-five/</guid><description>点击学生基本信息管理即可进入管理窗口 由studentinfo.java实现。</description></item><item><title>Java 大作业之学生信息管理系统—The Four</title><link>https://xbc.me/java-great-job-of-student-information-management-system-the-four/</link><pubDate>Mon, 08 Jun 2009 15:19:35 +0000</pubDate><guid>https://xbc.me/java-great-job-of-student-information-management-system-the-four/</guid><description>继续点击学生信息系统即可进入此窗体。由studentmanageframe.java实现。</description></item><item><title>Java 大作业之学生信息管理系统—The Second</title><link>https://xbc.me/java-great-job-of-student-information-management-system-the-second/</link><pubDate>Sun, 07 Jun 2009 02:31:20 +0000</pubDate><guid>https://xbc.me/java-great-job-of-student-information-management-system-the-second/</guid><description>上次只讲到了java相关的数据库连接 及操作下面就是登陆界面的了 主要由SimsLogin.java实现。</description></item><item><title>Java 大作业之学生信息管理系统—The First</title><link>https://xbc.me/java-great-job-of-student-information-management-system-the-first/</link><pubDate>Sat, 06 Jun 2009 18:08:54 +0000</pubDate><guid>https://xbc.me/java-great-job-of-student-information-management-system-the-first/</guid><description>经过端午节的假期，我给自己算是放了一个比较长的假期了，端午节的3天+一个星期，差不多是10多天吧，一直在放松期间也没有上来写点什么了。自上次搞得我很累以后就自己对自己要求降低了，唉，人呐就是不能对自己放松啊！这一放就是俩星期啊，现在辛苦了一个星期，终于把那该死的java作业搞定了。</description></item><item><title>数据结构双链表</title><link>https://xbc.me/double-linked-list-data-structure/</link><pubDate>Mon, 18 May 2009 15:12:00 +0000</pubDate><guid>https://xbc.me/double-linked-list-data-structure/</guid><description>双向链表（Double Linked List）（详情请看这里）双（向）链表中有两条方向不同的链，即每个结点中除next域存放后继结点地址外，还增加一个指向其直接前趋的指针域prior。</description></item><item><title>数据结构–循环链表</title><link>https://xbc.me/data-structure-circular-linked-list/</link><pubDate>Mon, 18 May 2009 15:11:25 +0000</pubDate><guid>https://xbc.me/data-structure-circular-linked-list/</guid><description>循环链表（详情请看这里单循环链表——在单链表中，将终端结点的指针域NULL改为指向表头结点或开始结点即可。</description></item><item><title>数据结构单链表的实现</title><link>https://xbc.me/realization-the-single-linked-list-data-structure/</link><pubDate>Thu, 14 May 2009 13:46:31 +0000</pubDate><guid>https://xbc.me/realization-the-single-linked-list-data-structure/</guid><description>最近正在恶补数据结构算法，大二上学期才学的， 现在基本上式全还给老师了，现在得拣起来，这几天也想了很多觉得自己就应该踏踏实实的努力，其他不要再想了，想得再多也没什么改变，关键是你自己得认识自己。</description></item><item><title>java的swing学习</title><link>https://xbc.me/learn-java-swing/</link><pubDate>Wed, 13 May 2009 12:06:38 +0000</pubDate><guid>https://xbc.me/learn-java-swing/</guid><description>题目很简单了</description></item><item><title>java简易的计算器</title><link>https://xbc.me/a-simple-calculator/</link><pubDate>Fri, 08 May 2009 14:05:55 +0000</pubDate><guid>https://xbc.me/a-simple-calculator/</guid><description>最近在做java的awt图形界面的作业，终于体会到了为什么那么多的人对IDE情有独钟，喜欢原始的还真不 多。随便一个什么都得new出来，关键new出来，以后的一堆的事等着你去料理，首先你得设置大小吧</description></item><item><title>java文件操作</title><link>https://xbc.me/java-file-operations/</link><pubDate>Wed, 06 May 2009 04:31:00 +0000</pubDate><guid>https://xbc.me/java-file-operations/</guid><description>记录java文件操作</description></item><item><title>请专注于学习续</title><link>https://xbc.me/please-focus-on-learning-continued/</link><pubDate>Wed, 11 Mar 2009 11:57:40 +0000</pubDate><guid>https://xbc.me/please-focus-on-learning-continued/</guid><description>学习笔记</description></item><item><title>学习c++虚函数与纯虚函数</title><link>https://xbc.me/learning-c-virtual-function-and-pure-virtual-function/</link><pubDate>Fri, 30 Jan 2009 13:56:03 +0000</pubDate><guid>https://xbc.me/learning-c-virtual-function-and-pure-virtual-function/</guid><description>虚函数与纯虚函数的学习</description></item><item><title>匿名委托的学习</title><link>https://xbc.me/study-commissioned-by-an-anonymous/</link><pubDate>Wed, 28 Jan 2009 17:21:10 +0000</pubDate><guid>https://xbc.me/study-commissioned-by-an-anonymous/</guid><description>委托是一种定义方法签名的类型，可以与具有兼容签名的任何方法关联。您可以通过委托调用方法。委托用于将方法作为参数传递给其他方法。</description></item><item><title>数值转换的实现</title><link>https://xbc.me/implementation-of-numerical-conversion/</link><pubDate>Wed, 24 Dec 2008 19:14:04 +0000</pubDate><guid>https://xbc.me/implementation-of-numerical-conversion/</guid><description>本文记录大作业的实现以及经历。</description></item><item><title>稀疏矩阵的链式存储实现</title><link>https://xbc.me/sparse-matrix-realization-of-a-chain-store/</link><pubDate>Fri, 14 Nov 2008 10:47:18 +0000</pubDate><guid>https://xbc.me/sparse-matrix-realization-of-a-chain-store/</guid><description>本文介绍了稀疏矩阵的概念以及实现。</description></item><item><title>稀疏矩阵的转置</title><link>https://xbc.me/sparse-matrix-transpose/</link><pubDate>Fri, 14 Nov 2008 10:39:01 +0000</pubDate><guid>https://xbc.me/sparse-matrix-transpose/</guid><description>本文介绍了矩阵的概念以及实现。</description></item><item><title>asp简单的转向</title><link>https://xbc.me/asp-simple-shift/</link><pubDate>Tue, 11 Nov 2008 14:14:15 +0000</pubDate><guid>https://xbc.me/asp-simple-shift/</guid><description>本文介绍如何使用asp验证登录。</description></item><item><title>asp的QUERYSTRING使用</title><link>https://xbc.me/asp-querystring-use/</link><pubDate>Tue, 11 Nov 2008 14:11:29 +0000</pubDate><guid>https://xbc.me/asp-querystring-use/</guid><description>本文介绍了在asp中如何利用的参数来传递值，利用QUERYSTRING来接收。</description></item><item><title>asp实现Post方法提交数据</title><link>https://xbc.me/post-method-to-submit-data/</link><pubDate>Tue, 11 Nov 2008 14:09:07 +0000</pubDate><guid>https://xbc.me/post-method-to-submit-data/</guid><description>本文介绍了post方法进行数据传输。</description></item><item><title>asp实现GET方法提交数据</title><link>https://xbc.me/get-method-to-submit-data/</link><pubDate>Tue, 11 Nov 2008 14:07:27 +0000</pubDate><guid>https://xbc.me/get-method-to-submit-data/</guid><description>本文介绍了asp里实现get方法。</description></item><item><title>链栈的实现</title><link>https://xbc.me/chain-stack-implementation/</link><pubDate>Tue, 11 Nov 2008 13:55:29 +0000</pubDate><guid>https://xbc.me/chain-stack-implementation/</guid><description>本文介绍了链栈的概念以及实现。</description></item><item><title>顺序栈的实现</title><link>https://xbc.me/stack-in-order-to-achieve/</link><pubDate>Tue, 11 Nov 2008 13:53:32 +0000</pubDate><guid>https://xbc.me/stack-in-order-to-achieve/</guid><description>本文介绍了顺序栈的概念以及实现。</description></item><item><title>链队列的实现</title><link>https://xbc.me/implementation-of-the-queue-chain/</link><pubDate>Tue, 11 Nov 2008 13:48:01 +0000</pubDate><guid>https://xbc.me/implementation-of-the-queue-chain/</guid><description>本文介绍了链队列的概念以及实现。</description></item><item><title>顺序队列的实现</title><link>https://xbc.me/on-the-order-of-the-realization-of-the-queue/</link><pubDate>Tue, 11 Nov 2008 13:45:02 +0000</pubDate><guid>https://xbc.me/on-the-order-of-the-realization-of-the-queue/</guid><description>本文介绍了顺序队列的概念以及实现。</description></item><item><title>顺序表的实现</title><link>https://xbc.me/order-table-data-structure/</link><pubDate>Tue, 11 Nov 2008 13:29:12 +0000</pubDate><guid>https://xbc.me/order-table-data-structure/</guid><description>本文介绍了顺序表的概念以及实现。</description></item><item><title>单链表的实现过程</title><link>https://xbc.me/a-single-linked-list/</link><pubDate>Tue, 11 Nov 2008 13:25:20 +0000</pubDate><guid>https://xbc.me/a-single-linked-list/</guid><description>本文介绍了单链表的概念以及实现。</description></item><item><title>关于IIS的服务World Wide Web Publishing Services无法启动的解决</title><link>https://xbc.me/world-wide-web-publishing-services-can-not-start/</link><pubDate>Sat, 27 Sep 2008 20:35:17 +0000</pubDate><guid>https://xbc.me/world-wide-web-publishing-services-can-not-start/</guid><description>本文记录如何解决ISS无法正常启动的经历。</description></item><item><title>对学习计算机专业的人一些忠告(转载)</title><link>https://xbc.me/computer-learning-some-advice-people/</link><pubDate>Sun, 07 Sep 2008 23:54:16 +0000</pubDate><guid>https://xbc.me/computer-learning-some-advice-people/</guid><description>转载文章，版本为原作者所有。</description></item><item><title>有关C语言-辗转相除法</title><link>https://xbc.me/for-c-language-euclidean-algorithm/</link><pubDate>Mon, 05 May 2008 04:34:00 +0000</pubDate><guid>https://xbc.me/for-c-language-euclidean-algorithm/</guid><description>本文介绍如何了辗转相除法相关概念以及实现。</description></item><item><title>ubuntu 8.04安装A78GT的最新 驱动成功！</title><link>https://xbc.me/ubuntu-install-the-latest-driver-for-a78gt/</link><pubDate>Mon, 05 May 2008 01:17:16 +0000</pubDate><guid>https://xbc.me/ubuntu-install-the-latest-driver-for-a78gt/</guid><description>本文介绍在ubuntu下如何安装A78GT显卡驱动的方法。</description></item><item><title>移花接木的8.04硬盘安装方法(AMD版)+制作双系统引导菜单—–献给我最爱的ubuntu！</title><link>https://xbc.me/install-ubuntu-with-hard-drive/</link><pubDate>Sat, 12 Apr 2008 01:57:12 +0000</pubDate><guid>https://xbc.me/install-ubuntu-with-hard-drive/</guid><description>介绍硬盘安装ubuntu的2种不同方式以及如何制作修改系统引导菜单。</description></item></channel></rss>